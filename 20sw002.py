# -*- coding: utf-8 -*-
"""20sw002.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YguebTrufEMqlf_fmMw3igRwPZgT16bu
"""



"""Task #01
Import numpy as np
"""

import numpy as np
arr1d = np.array([1, 2, 3, 4, 5])
print(arr1d)

import numpy as np

even_array = np.arange(2, 33, 2).reshape(4, 4) # Create a 4x4 ndarray with consecutive even numbers from 2 to 32

print(even_array)



"""Task#02
create 5x5 ndarray with consecutive  integers from 1 to 25 ((inclusive))
"""

import numpy as np

# Create a 5x5 ndarray with consecutive integers from 1 to 25
int_array = np.arange(1, 26).reshape(5, 5)

print(int_array)

"""afterward use boolean  indexing  to pick out only odd numbers in the array"""

import numpy as np

# Create a 5x5 ndarray with consecutive integers from 1 to 25
int_array = np.arange(1, 26).reshape(5, 5)
odd_numbers= int_array[int_array % 2!=0]
print(odd_numbers)

"""Create 5x5 ndarray of X"""

import numpy as np

# Create a 5x5 ndarray with consecutive integers from 1 to 25
X = np.arange(1, 26).reshape(5, 5)

print(X)

"""use Y variable to find the odd numbers in 5x5 ndarray"""

import numpy as np

# Create a 5x5 ndarray with consecutive integers from 1 to 25
X = np.arange(1, 26).reshape(5, 5)
Y = X[X%2!=0]
print(Y)

"""Task #3
import numpy as np
Use broadcasting to create 4x4 ndarray that has its first column full of 1s ,second column full of 2s , its third column full of 3s ,etc....

```
# This is formatted as code
```


"""

import numpy as np

# Create a 4x4 ndarray with the desired pattern using broadcasting
result = np.arange(1, 5)[:, np.newaxis] * np.ones((1, 4), dtype=int)

print(result)